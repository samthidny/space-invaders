{"version":3,"sources":["constants.js","game-item.js","game-model.js","keyboard-manager.js","sprite-animation.js","sprite-manager.js","renderer.js","sound-manager.js","game.js"],"names":["NUM_LIVES","GAME_WIDTH","GAME_HEIGHT","DEFAULT_SPRITE_SIZE","TANK_SPEED","TANK_MARGIN","NUM_ENEMY_ROWS","ENEMY_SPEED","ENEMY_SIZE","ENEMY_X_SPACE","ENEMY_Y_SPACE","ENEMY_SHIELD_LIMIT","ENEMY_GROUND_LIMIT","ENEMY_STAGGER_FRAMES_MAX","ENEMY_STAGGER_FRAMES_MIN","ENEMY_LEVEL_INCREASE_Y","GAME_LOOPS_PER_SECOND","MISSILE_SPEED","MISSILE_WIDTH","MISSILE_HEIGHT","MAX_ACTIVE_MISSILES","BOMB_SPEED","MAX_BOMBS","SHIELD_WIDTH","SHIELD_HEIGHT","USE_ANIMATION_FRAME","GameItem","type","x","y","width","height","metadata","sprite","isAlive","halfWidth","halfHeight","GameModel","sprites","numSprites","gameWidth","gameHeight","uniqueID","level","gameItem","push","id","aliveSprites","filter","length","KeyboardManager","document","addEventListener","event","keyDownHandler","keyUpHandler","keyDown","preventDefault","code","SpriteAnimation","animation","_animation","currentFrame","SpriteManager","spriteImageDatas","spriteAnimations","frameCount","name","spriteData","arr","i","frames","imageData","createSpriteImageData","colour","gameItemID","animationName","getAnimation","spriteAnimation","state","canvas","ctx","getContext","animationSpriteState","getAnimationSpriteState","currentFrameSprite","putImageData","spriteWidth","spriteHeight","spriteImageData","ImageData","setPixel","color","Math","round","offset","data","prop","nextFrame","Renderer","model","spriteManager","querySelector","innerHTML","SPRITES","MYSTERY_SHIP","TANK","ENEMY1","ENEMY2","ENEMY3","style","setProperty","addAnimation","forEach","addSprite","gameDiv","e","createElement","setAttribute","c","appendChild","addAnimationSpriteState","renderCount","left","top","update","drawToSprite","parentElement","removeChild","display","innerText","lives","score","SoundManager","audio","window","AudioContext","webkitAudioContext","alienSoundToggle","tune","currentNote","frequency","osc","createOscillator","value","vol","createGain","gain","connect","destination","start","stop","currentTime","perc","soundAlien","Game","gameLoopsPerSecond","isPaused","gameInProgress","gameIsOver","keyboard","interval","renderer","soundManager","enemyStaggerFrequency","maxActiveBombs","enemyStartY","initLevel","bind","clear","init","numActiveMissiles","fireMissile","currentEnemyRow","numActiveBombs","enemyType","enemyGameItem","column","row","createShield","xPos","yPos","blockWidth","blockHeight","skip","hasShields","removeShields","enemyDirection","enemySpeed","calculateEnemyStaggerFrequency","moveEnemyCount","tank","tankSpeed","alert","nextLevel","console","log","dispatchEvent","CustomEvent","render","animationFrameGameLoop","intervalSpeed","setInterval","gameLoop","clearInterval","numEnemies","percRemaining","percGone","r","range","stagger","ceil","sectors","fraction","requestAnimationFrame","getLiveItems","enemiesHitWall","tankWallLeft","tankWallRight","fireBomb","firingEnemy","fireMysteryShip","enemies","shields","mysteryShips","shield","gameSprite","lowestCols","col","floor","random","missiles","bombs","enemy","isHit","a","b","missile","mysteryShip","bomb","gameOver","removeDeadSprites","soundGap","max","playNote","EventTarget","game"],"mappings":";;;;;;AACO,IAAMA,SAAS,GAAG,CAAlB;AEDP,AMAA,AFAA,ADAA;ALGO,IAAMC,UAAU,GAAG,GAAnB;AQFP;ARGO,IAAMC,WAAW,GAAG,GAApB;AQFP;ARGO,IAAMC,mBAAmB,GAAG,EAA5B;AQFP,IPHauB,AEAAwB,AIAAmF,AHAA1E,qCHET,kBAAYhC,IAAZ,EAAkBC,CAAlB,EAAqBC,CAArB,EAAwBC,KAAxB,EAA+BC,MAA/B,EAAuCC,QAAvC,EAAiD;ADK9C,ACL8C,AEAjD,AIEA,AHFA,IJKS5B,UAAU,GAAG,GAAnB,MOHW,CHFFwD,EDAE,OCAd,EAAuB;AIE3B,ALFkB,AIEA,AHFS,IFAdvB,AIAA8D,ADAApC;ALMN,ACLC,ACCJ,AICA,ADDA,ILIS1D,GCLAsB,IAAL,GAAYA,CDKI,GAAG,ACLnB,EDKD,AMHSyE,GJDE,EICd,EAAmB,ADDL;AJAV,ACAU,AMClB,ALHkB,AGGK,ACAf,AHFA,ACCU,OJALnE,EMCAqG,AHFAzE,IHCL,CMCA,ENDclC,CMCD,EHFb,CHCA,EMCkB4G,AHFA3E,MGEM,CAAC4E,EHFzB,UGEkB,IAAuBD,MAAM,CAACE,kBAAnC,GAAb;APKD,ACLC,AMCA,AHFA,IJMKnI,GCLAsB,CAAL,CMCK8G,AHFA5E,EHCIlC,CAAT,MDKmB,GAAG,AINtB,CJMD,EINqB,CGEpB,AHFA,GGEwB,KAAxB;ANAA,ACDA,ACFAuB,AGGA,ACCA,AHFH,ACAG,IFFAA,GFGKtB,CAAL,CCDKS,AICA8D,ACCAuC,AFFA3E,EJCInC,CAAT,AEHQ,CAACuB,AIIT,CDDA,EJDA,AKEY,CDDCgD,ACCA,ELFE,AKEH,ELFZ,AKEiB,CDDjB,CCCY,EAAS,AFFrB,EEEY,CFFY,CFFxB,AIIyB,CJJC,AEE1B,CEEY,CAAZ,OJJA,EAAqC,UAAC/C,KAAD;AHQtC,ACJC,ACDA,ACHqC,AGIrC,ACCA,AFFA,ILKK9C,GCJAuB,ECDAS,AICA8D,ACCAuC,AFFAtG,GJCL,CEJgD,EHQhC,ACJHR,CIDb,ELKmB,AGRiC,CHQrD,AELC,ACHqDwB,AEGtC,CJCG,AMClB,CFFA,CHAkB,AIClB,CJDA,AKEmB,CNDG,AMCtB,CDDqB,CLArB,GKAyBS,IHJuB,CAAoBV,KAApB,CAAX,iBGIhB,EAArB;ALCA,ACDA,ACJqC,AGKrC,ACCH,AFFG,KFJA,EFKKtB,ECDAS,AICA0B,ADDAD,IJCL,GAAclC,ECDd,CICA,EJDiB9B,CDCG,AKAF,CAAlB,CAHe,CAIf,ADFA,CJCwB,EAAxB,AIDwB,EAAxB,YHAA;AFKD,ACHC,ACDA,ACJAkD,AGMA,ADFA,ILIK3C,AGRL2C,GFKKjB,ECDAO,AGAAyB,GFJG,CAACd,CHQM,ACHf,GDGkB,ACHH,EDGhB,AEJC,AGAA,EJCA,CCDkBlD,AGAA,CAAlB,MFJA,CAA0B,OAA1B,EAAmC,KDInC,KCJoCmD,KAAD;AFMnC,ACDA,ACLmC,AGOtC,ADFA,OJCQrB,ECDAU,AEFT,IDHkD,EFM9C,ECDA,CDCgBV,AENkC,CAACuB,CDKnC,CAAhB,GEFqB,EHGrB,KEN8C,CAAkBF,KAAlB,CAAX;AHSpC,ACFC,ACDA,ACNmC,ACInC,IJKK5C,CGTL,EFOK0B,ECDAQ,IEFE,CFEP,EDCA,CDEkB,AEHL,CAAb,AEFYkB,CHGK/B,CDEI,EAAtB,ECFuB,GAAG,CGHlB,CAAgB,CHGvB,IGH4BgC,YAArB,CAAP;AHIA,ACDH,ACNG,ACIH,OHGQ1B,EEPAoB,EIMT,KJNI,CFOA,EEPe,CFOGzB,CEPlB,KFOwB,GAAG,EMDpB8G,CNCP,QMDJ,EAAsB;APGnB,ACDF,AEPA,AIMG,IPEKnI,MOFCoI,GAAG,GAAG,CPEM,GAAG,COFJR,CPElB,IOFa,CAAWS,gBAAX,EAAZ;AACAD,MAAAA,GAAG,CAACnH,CDAR,ADFA,GEEI,GAAW,UAAX,CDAI,KDFKwC,IAAb,EAAmBC,UAAnB,EAA+B;ALI5B,AMDC,ACAA0E,AFFA,ILGKnI,EODLmI,GAAG,CDAG9D,ACAF6D,AFFExE,CDDV,ECCa,GCEG,ADFA,EAAZ,CCEelB,ACAf,CAAc6F,EPCS,GAAG,AOD1B,EDAuB,CNCxB,AMDyB1C,ACAFuC,IHHd,KGGR,IDAe,CAAuB,eAAvB,CAAf;AACA7D,ACCA,AHJA,MEGAA,KJFJ,AKGS0D,AHJA5E,CEGC,CAACyC,SAAP,CFHA,EEGmB,EAAnB,ACCA,GLHM3D,AKGkB,CAAC,KAAK8F,ELHlC,EAAoB,YKGhB;APAD,AEFC,AIGH,ACCG,AFLA,ILGK9H,MOECqI,CLJD3G,ACNT,AEKS,EEKI,EFLAgC,CEKG,AFLF,EHCV,CAAazB,AGDA,CAAb,CEKiByF,CPFM,AKHPhE,CHChB,AGDiB,CHCC1B,CFEQ,COEd,AFLQwB,CEKG8E,CPFxB,IEFC,GCNW7F,CEKmB,CEKlB,AFLmBkB,EEK/B,CJVJ,EAAsB,CEKE,CAAkBtB,MAAtC,EAA8CqB,CAAC,EAA/C,EAAmD;AHEnD1B,ACNAS,AIWA4F,AHPA,ACEI,MHAJrG,ACNAS,AIWA4F,GAAG,CAACE,AHPA,CDJC,CAAC1F,AEMIe,EHAF,AKKR,CLLS1B,AKKAkG,AHPAlF,EFET,GAAc,AKKd,CFLmB,EEKF,CFLK,EFNtB,AIWA,CHPI,EFEmB,AGAIW,CDFH,IFEI/B,CEFCmB,OFE7B,GEFwB,CAAgBZ,ICElB,CAA2BmB,CDFzB,GAAyB,CAAjD,EAAoD,GCEO,CAACG,MAAX,CAAkBD,CAAlB,CAA3B,EAAiDF,UAAU,CAACM,MAA5D,CAAlB;ALGL,AEFC,ACNA,AIWAoE,AHPI,ACEAzE,ILECxD,EOGLiI,EFLIzE,CEKD,CAAC+E,CLLC7G,ACNAiB,AEME,CAACX,CDFCiB,GCEL,CEKJ,AFLaU,CFNb,AIWYyE,CJXC5F,EDMb,AKKA,GJXkB,CAACK,ACIf,CCEA,ELEyB,AIJL,CDJxB,ACII,EJI4B,EAAjC,AGR4B,IAA3B;ADOA,ACNH,AIYGuF,AHRC,ACGA,MEKDA,GAAG,CAACG,CLNC1G,AIET,MCII,CAAY,CLNZ,IKMiB4F,IDJd,CCIS,CAAWe,WAAvB;APJD,AEDC,AICG,ACMHP,AHTH,IJGQhI,EOMLgI,GAAG,CAACQ,GLPG1G,EKOP,MLPA,OFC6B,GAAG,CAAjC;AEAF,AKOGkG,AFPA,MHEJ,AKKIA,GAAG,CAACS,CFPCvF,GEOL,CAAS,KAAKsE,KAAL,CAAWkB,CFPpB,CAAsBrF,IAAtB,IAA8BE,CEOrB,EFPT,CEOkC,GAAlC;APND,AMCC,ACMH,AFPA,ILAQtD,MM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EAA0CR,OAAO,CAACG,MAAlD;AE7HA,AF8HA,ADlGI,WG5BCmD,AF8HAzD,IDlGMtB,KAAP,ICkGJ,CE9HA,AF8HmBiC,GE9HG,KAAtB,IF8HA,CAAgC,QAAhC,EAA0CR,OAAO,CAACI,MAAlD;AE7HA,AF8HA,ADlGC,OAP+B,CAQhC,GG7BKmD,AF8HA1D,UE9HL,GAAkB,AF8HlB,CAAmBW,IE9HnB,QF8HA,CAAgC,QAAhC,EAA0CR,OAAO,CAACI,MAAlD;AE7HA,AF8HA,WE9HKoD,AF8HA3D,QE9HL,GAAgB,EF8HhB,CAAmBW,CE9HC9D,WF8HpB,CAAgC,QAAhC,EAA0CsD,OAAO,CAACK,EE9HlC,EAAhB,EF8HA;AE7HA,AF8HA,ADlGH,WG5BQT,AF8HAC,KE9HL,GAAa,IAAIhE,CF8HjB,CAAmB2E,YAAnB,CAAgC,KE9HnB,EAAb,CF8HA,EAA0CR,OAAO,CAACK,MAAlD;AE7HA,AF8HA,WE9HKoD,AF8HA5D,QE9HL,GAAgB,EF8HhB,CAAmBW,CE9HnB,WF8HA,CAAgC,cAAhC,EAAgDR,OAAO,CAACC,YAAxD,EAjIG,CAmIH;AE/HA,AFgIA,WEhIKyD,QAAL,GAAgB,IAAI/D,kBAAJ,CAAa,KAAKC,KAAlB,CAAhB;AACA,AFgIA,WEhIK+D,AH4BT,YG5BI,GAAoB,IAAI9B,GH4BfrD,MAAb,EAAqBL,UAArB,EAAiC,GG5BT,EAApB;AACA,AFgIA,ADpGA,UAAMM,CG5BDyC,EH4BI,GAAG1C,MG5BZ,AH4BkB,CAACE,EG5BA,CAAnB,CAZG,CAcH,KH0BY,CAAkB,IAAlB,CAAZ;AACA,UAAMC,oBAAoB,GAAG,KAAKC,uBAAL,CAA6BT,UAA7B,CAA7B;AG1BA,AFkIA,WElIKyB,AFkIAA,KElIL,AFkIA,CElIWzD,AFkIAL,KElIX,EFkIA,CElImB,AFkIA2E,CElInB,MFkIA,CAA2B,UAACrE,QAAD,EAAc;AEjIzC,AFkII,ADxGJ,QCwGI,EDxGA,CG1BCwD,AH0BAjB,ECwGG,CAAC+B,EElIT,CAAWiB,KAAX,CFkII,CAAevF,CElIA5C,MH0BnB,CCwGI,CDxGuB,CCuGc,CAErC,UEnIJ;AACA,AH0BI,WG1BCoG,KAAL,CAAWgC,KAAX,GAAmB,CAAnB;AACA,AFkIC,ADxGA,OCqGD,IE/HKgC,qBAAL,GAA6BvJ,mCAA7B;AACA,AFkIH,WElIQwJ,cAAL,GAAsB,CAAtB;AACA,AHyBA,UAAM7F,CGzBD8F,QHyBU,GGzBf,AHyBkBnF,GGzBC,EAAnB,eHyBsC,CAACE,kBAAvC,CAN6B,CAO7B;AGzBA,WAAKkF,SAAL,GArBG,CAuBH;AHwBAvF,MAAAA,KCwGJ,CDxGU,CAAClD,KAAP,GAAe0C,SCwGT5B,ADxGkB,CAACd,KAAzB,ECwGJ,EAAoB;AE/HhBqB,AFiIA,ADzGA6B,MGxBA7B,AHwBA6B,ICyGMmC,EDzGA,CAACpF,CGxBC,CAACqB,EFiII,EDzGb,CCyGgBD,EDzGAqB,MCyGQ,CAAC8B,EEjIzB,AHwByB,CGxBC,AHwBAvE,MAA1B,CGxBA,EAAmC,CFiInB,CAAuB,GEjICwB,YAAL,AFiInB,CEjIqCiH,AFiIrD,IEjImC,CAAuB,IAAvB,CAAnC;AAEA,AFgIA,ADzGAvF,MAAAA,GAAG,CCyGGmC,ADzGF9B,CGvBC4E,AFgIE,GAAG/G,KEhIV,CAAcsH,EFgII,ADzGlB,CCyGmBpD,ADzGF7C,EGvBjB,OHuBA,EAA4B,CAA5B,CCyGU,CAAuB,ADzGF,CAA/B,ICyGU,CAAV;AE/HA,AFgIA4C,ADzGH,MCyGGA,CAAC,CAACE,GEhIG4C,QAAL,CAAcQ,AFgId,CAAe,GEhIf,KFgIA,EAAyB,IAAzB;AE/HH,AFgIGtD,MAAAA,CAAC,CAACE,YAAF,CAAe,QAAf,EAAyB1E,QAAQ,CAACE,EAAlC;AACAsE,MAAAA,CAAC,CAACE,YAAF,CAAe1E,QAAQ,CAACjB,IAAxB,EAA8B,IAA9B;WDzGJ,+BAAsByC,UAAtB,EAAkCM,MAAlC,EAA0C;AC2GtC,AD1GA,UAAMa,CGvBV,AFiIS,IAAIU,IAAT,ED1GiB,EC0GArD,CD1GGwB,OC0GK,CAACpC,CEjIjBqB,CHuBqB,CAAC,CAAD,CAAV,CGvBxB,AHuBsCJ,EGvBlB,AFiIhB,EAAoC,ED1GpC;AGtBA,AFiIImE,AD1GJ,QC0GIA,CAAC,CEjID/D,AFiIEiE,AD1GA9B,KGvBG,CAAC9B,IAAN,EFiIA,AD1Gc,CC0GCuC,CEjID,CHuBG7B,EC0GjB,EAAqBxB,EEjIrB,IAAyB,AHuBE,CAACK,CC0GC,CAACjB,EEjIA2I,EHuBlC,IC0GyB,CAAkB1E,IAAlB,CAArB,KEjIyB,GAAyB7E,8BAAtD,EAA2E;AACvE,AFiIH,AD1GD,OCgGgB,CAYhB,ED5GMqE,GGvBGmF,WAAL,CHuBiB,EGvBE,CHuBC,GGvBpB,CHuBwBlF,SAAJ,CAAcH,WAAd,EAA2BC,YAA3B,CAAxB;AGtBI,aAAKmF,iBAAL;AACH,AHyBD,WAAK,IAAI9I,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2D,YAApB,EAAkC3D,CAAC,EAAnC,EAAuC;AGxB1C,AFiIGuF,ADxGI,MGvBR,AF+HIA,CAAC,CAACN,KAAF,ADxGS,CCwGDhF,GDxGKF,CAAC,CCwGd,EDxGiB,CAAb,EAAgBA,CAAC,GAAG2D,ICwGL3C,ODxGf,CCwGuB,CAACd,ADxGSF,CAAC,EAAlC,ECwGJ,ADxG0C;ACyG1CwF,ADxGQ,MCwGRA,CAAC,CAACN,KAAF,CAAQ/E,CDxGK4D,KCwGb,GDxGQ,CAAcF,SCwGF7C,MDxGZ,ECwGoB,ADxGWhB,CCwGVG,ADxGrB,EAAkCF,CAAlC,EAAqCuC,CCwG7C,QAdgB,CAgBhB,AD1GuD,CAACvC,CAAD,CAAV,CAAcD,CAAd,IAAmB8C,MAAnB,GAA4B,IAAjE;AACH;AC0GL,ADzGC,UCyGK6C,CAAC,GAAGpE,QAAQ,CAACkE,aAAT,CAAuB,QAAvB,CAAV;AACAE,MAAAA,CAAC,CAACD,GEnIN,SFmII,CAAe,OAAf,EAAwB1E,EEnIhB,MFmIwB,CAACd,KAAjC;AEnIQ,AFoIRyF,ADzGA,MCyGAA,CAAC,CAACD,KDzGK7B,OCyGP,CAAe,ODzGf,CCyGA,EAAyB7C,QAAQ,CAACb,MAAlC;AACAqF,ADzGH,MCyGGA,CAAC,CAACI,WAAF,CAAcD,CAAd;AEnIA,AFqIA,WErIKnB,AFqIAC,KErIL,CAAW/D,OAAX,AFqIA,CAAmBmF,EErIE,EAArB,mBFqIA,CAA2C7E,QAAQ,CAACE,EAApD,EAAwDF,QAAQ,CAACX,MAAT,IAAmBW,QAAQ,CAACjB,IAApF,EAtBgB,CAwBhB;AEtIA,AFuIA,WEvIKuI,QAAL,CAAcO,KAAd,GAHQ,CAKR;AFsIA,WD5GJ,kBAASjG,SAAT,EAAoB5C,CAApB,EAAuBC,CAAvB,EAA0B+D,KAA1B,EAAiC;AGzB7B,AFyIA,AD/GAhE,MAAAA,CAAC,GAAGiE,CG1BCgF,GH0BG,CAAC/E,KAAL,CAAWlE,CAAX,CAAJ,GG1BA,GAAuBtB,yBAAvB;AACA,AH0BAuB,MAAAA,CAAC,GAAGgE,CG1BC8E,GH0BG,CAAC7E,KAAL,CAAWjE,CAAX,CAAJ,KG1BA,GAAyB,CAAzB;AACA,AFwIAsF,AD9GA,MC8GAA,ID9GMpB,CG1BD+E,EFwIE,CAACtD,ED9GI,GAAG,CAAE3F,CAAC,GAAG2C,CG1BrB,AFwIA,CAAoB4C,CAApB,CExIsB,CAAtB,CARQ,CAUR,EHwB8B,CAACtF,KAAf,GAAwBF,CAAzB,IAA8B,CAA7C;AC+GA,AD9GA4C,MAAAA,OC8GO4C,CAAP,CD9GS,CAACpB,IAAV,CAAeD,MAAf,IAA0BH,KAAK,IAAI,EAAnC;AGxBA,AFuIH,AD9GGpB,MAAAA,KGzBK,IAAI3C,AHyBA,CGzBC,AHyBAmE,GGzBG,CAAb,AHyBA,CAAeD,CGzBClE,CAAC,GAAGvB,CHyBC,GAAG,CAAxB,IAA8BsF,KAAK,IAAI,CAAV,GAAe,GGzB5C,CHyBA,CGzBoC/D,CAAC,EAArC,EAAyC;AACrC,AHyBJ2C,MAAAA,OGzBS,EHyBA,CAACwB,CGzBGpE,CAAC,EHyBd,CGzBiB,AHyBFmE,CGzBX,EAAgBnE,CAAC,EHyBA,CGzBG,EAApB,AHyBoB,CAAxB,CGzB4BA,CAAC,EAAzB,AHyB0BgE,EGzBG,GHyBJ,GAAU,IAAvC;AGxBQ,AHyBRpB,MAAAA,QGzBcuG,CHyBL,CAAC/E,IAAV,CAAeD,EGzBQ,GAAG,CHyBL,GAAG,CAAxB,IAA6BH,EGzBQ/D,CAAC,EHyBJ,CGzBO,CAAf,CAAlB,EHyB+B,IAAV,GAAiB,CAAjB,GAAqB,IAAlD;AGxBQ,AHyBX,WC6GD,GEtIkBmJ,aAAa,GAAG,GFsIrBpI,CEtIyBlB,OFsItC,EAAuB,SEtIW,CAAa,OAAb,EAAsB,CAAClB,wBAAaC,wBAAd,IAA+BmB,CAArD,EAAyD,CAACpB,wBAAaE,wBAAd,IAA+BmB,CAAhC,GAAqC,KAAKyI,WAAlG,EAA+G9J,qBAA/G,EAA2HA,qBAA3H,EAAuI;AAAEyK,AFuIvK,UAAMhJ,EEvIiKgJ,IFuI3J,EEvIiK,CFuI9J9D,CEvIgKvF,CAAV,KFuI/I,CAAC0E,aAAR,qBAAkC1D,QAAQ,CAACE,EAA3C,aAAsD,KAAKoE,SAAL,CAAetE,QAAf,CAArE,CADmB,CAEnB;AExIkLsI,AFyIrL,YEzIqLA,GAAG,EAAErJ,CAAlB;AAAqBI,WH2B9L,CG3B8LA,MAAM,EAAE8I,SH2B7L;AG3BgK,AH4BrK,UAAI,CG5B0B,CAAtB,GH4BC7G,UAAL,GAAkB,KAAtB,EAA6B;AG3BrB8G,AH4BJ,UG5BIA,CF0IZ,ED9Ga,IAAI/E,IAAT,EG5BiB,CAAChE,CH4BD,EC8GlByF,GE1IK,AH4BkBzD,GG5BK8G,KF0InC,EAAoB,EE1IR,IH4BJ,EAAwC;AG3BpC,AFyIQ,AD7GR,cAAMjG,CG5BDsB,KAAL,CAAWc,QH4BU,CG5BrB,CAAqB8D,CH4BG,KAAK/G,OG5B7B,SH4BwB,CAAsBgC,IAAtB,CAAxB,CADoC,CAEpC;AG5BH;AACJ,AFwID,AD5GQ,UC4GFkB,ID5GMrC,GC4GC,GAAG3B,QAAQ,CAACmD,AD5GjB,EAAqB,WC4Gb,CAAuB,eAAvB,CAAhB;AACA,AD5GYxB,WC4GPsB,CD5GOtB,IC4GZ,CAAWxC,OAAX,CAAmB2E,ED5GQ,CAACf,IC4G5B,CAA2B,ID5Gf,MC4GgBtD,QAAD,EAAc;AEvIzC,AFwII,AD5GK,UG5BHuI,EFwIIlJ,MAAM,GAAGkF,CExID,GAAG,GFwIK,CAACb,KExIrB6E,QFwIa,IExIE,CAACC,IAAD,EAAOC,IAAP,EAAgB,IFwIgBzI,QAAQ,CAACE,EAA3C,aAAsD,MAAI,CAACoE,SAAL,CAAetE,QAAf,CAArE;AEvIA,AH4BC,aG5BI,IAAIf,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG,CAApB,EAAuBA,EAAC,EAAxB,EAA4B;AACxB,AFuIJI,QAAAA,MAAM,CEvIG,AFuIF6E,IEvIMlF,CFuIb,CEvIc,AFuID+F,GEvII,CAAb,AFuIJ,EEvIoB/F,CFuIAgB,CEvIC,GAAG,CAApB,EAAuBhB,CFuIC,CEvIA,AFuICA,CAAT,CEvIhB,EAA4B,AFuIC,IAAjC;AEtIQ,AFuIRK,AD5GA,QC4GAA,KD5GKiC,CC4GC,CAAC4C,KAAP,CAAac,ED5Gb,CC4GA,ED5GkB,CC4GChF,AD5GnB,QC4G2B,CAACf,CAAT,GAAa,IAAhC,CAHqC,CAKrC;AExIQ,AFyIR,AD9GH,gBG3BiByJ,UAAU,GAAG,EAAnB;AACA,AFyIR,gBEzIcC,WAAW,GAAG,EAApB;AACA,AFyIR,AD/GJ,WAAKrH,KG1BasH,IAAI,CH0BtB,EG1ByB3J,CHepB,CGfqB,AH2B1B,KG3B+B,CAAN,IAAWD,EAAC,GAAG,CAAf,IAAoBA,EAAC,GAAG,CAArC;AF0IR,AD9GJ;AG3BY,AF2IR,AD9GP,gBG7BmB,CAAC4J,IAAL,EAAW;AACP,cAAA,KAAI,CAACpF,KAAL,CAAWc,SAAX,CAAqB,IAAIxF,kBAAJ,CAAa,QAAb,EAAuB0J,IAAI,GAAIE,UAAU,GAAG1J,EAA5C,EAAgDyJ,IAAI,GAAIE,WAAW,GAAG1J,EAAtE,EAA0EyJ,UAA1E,EAAsFC,WAAtF,CAArB;AACH,AF0IT,YAAMhE,CAAC,GAAGtF,MAAM,CAACqE,aAAP,CAAqB,QAArB,CAAV,CAZqC,CAarC;AE1IK,AF4IL;AE3IC,AF6ID;AE5IH,OAZD,CApBQ,CAkCR;AF2II,QAAA,MAAI,CAACD,aAAL,CAAmBwB,MAAnB;;AE1IJ,AF2II,QAAA,GE3IC,GF2IG,CE3ICjG,AF2IAyE,CE3IC,GAAG,CAAb,EAAgBzE,CAAC,GAAG,CAApB,CF2II,CE3ImBA,AF2IAkG,CE3IC,EAAxB,EAA4B,OF2IxB,CAAgCP,CAAhC,EAAmC3E,QAAQ,CAACE,EAA5C,EAnBqC,CAoBrC;AE3IAqI,AF+IA,QE/IAA,YAAY,CAAC,KAAM5J,0BAAeK,CAArB,GAA2B,KAAKA,CAAjC,EAAqC,GAArC,CAAZ;AACH;;AAED,AF6II,WE7IC6J,CF6IG,CAAC7I,QE7IT,AF6IiB,CAACV,EE7IA,IAAlB,CF6II,EAAuB;AE5I3B,AF6IQD,UAAAA,CE7IHyJ,KF6IS,CAAC3D,OE7If,GAAqB,GF6Ib,CAAqBC,CE7I7B,UF6IQ,CAAiC/F,MAAjC;AE5IR,AF6IQA,UAAAA,CE7IH0J,KF6IS,CAAC7E,KAAP,CAAamB,EE7IrB,GAAsB,CAAtB,CF6IQ,GAAuB,MAAvB;AE5IR,AF6IK,WE7IA2D,UAAL,GAAkBrL,sBAAlB;AACA,AF8IC,OA9BD,IEhHK6J,qBAAL,GAA6B,KAAKA,qBAAL,GAA6B,KAAKyB,8BAAL,CAAoC,EAApC,CAA1D;AACA,AF+IA1I,MAAAA,KE/IK2I,GF+IG,CAACxF,UE/IT,GAAsB,AF+ItB,CE/IA,AF+IuB,CE3Lf,CA8CR,aF6IA,EAAwC4B,SAAxC,oBAA8D,KAAK9B,KAAL,CAAW+B,KAAzE;AACAhF,MAAAA,QAAQ,CAACmD,aAAT,CAAuB,cAAvB,EAAuC4B,SAAvC,aAAsD,KAAK9B,KAAL,CAAWgC,KAAjE;AE7IA,AF8IAjF,MAAAA,KE9IK4I,GF8IG,CE9IR,AF8ISzF,GE9IG,KAAKF,KAAL,AF8IZ,CE9IuBc,AF8IA,SE9IX,CAAqB,IAAIxF,AF8IrC,EAAuCwG,SAAvC,OE9IiC,CAAa,KF8IQ,CE9IrB,EAAqB,EF8IK9B,GE9IAA,EF8IL,CAAWzD,EE9IX,CAAWH,EF8IjE,OE9IsD,GAAuB,CAA5C,EAA+C,KAAK4D,KAAL,CAAW3D,UAAX,GAAwBtC,8BAAvE,EAA4F,EAA5F,EAAgG,EAAhG,CAArB,CAAZ;AACA,AFgJH,WEhJQ6L,SAAL,GAAiB5L,qBAAjB;AACA,WAAKwK,WAAL,GAAmB,KAAnB;AACH;;;WAED,yBAAgB;AACZ;AACAqB,MAAAA,KAAK,CAAC,gBAAD,CAAL,CAFY,CAGZ;;AACA,WAAKC,SAAL,GAJY,CAKZ;AACH;;;WAED,oBAAW;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,WAAK7C,IAAL;AACA,WAAK8C,aAAL,CAAmB,IAAIC,WAAJ,CAAgB,WAAhB,CAAnB;AACH;;;WAED,iBAAQ;AAAA;;AACJ,UAAI,KAAKxC,cAAT,EAAyB;AACrB;AACH;;AACD,WAAKD,QAAL,GAAgB,KAAhB;AACA,WAAKC,cAAL,GAAsB,IAAtB;AACA,WAAKI,QAAL,CAAcqC,MAAd;;AAEA,UAAI9K,8BAAJ,EAAyB;AACrB,aAAK+K,sBAAL;AACH,OAFD,MAEO;AACH,YAAMC,aAAa,GAAG5G,IAAI,CAACC,KAAL,CAAW,OAAO,KAAK8D,kBAAvB,CAAtB;AACAuC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BK,aAA7B;AACA,aAAKxC,QAAL,GAAgByC,WAAW,CAAC,YAAM;AAC9B,UAAA,MAAI,CAACC,QAAL;AACH,SAF0B,EAExBF,aAFwB,CAA3B;AAGH;AACJ;;;WAED,gBAAO;AACH,WAAK5C,QAAL,GAAgB,IAAhB;AACA+C,MAAAA,aAAa,CAAC,KAAK3C,QAAN,CAAb;AACA,WAAKH,cAAL,GAAsB,KAAtB;AACH;;;WAED,mBAAU;AACN;AACA;AAEA,WAAKY,IAAL;AACH;;;WAGD,yCAAgCmC,UAAhC,EAA4C;AAExC,UAAMC,aAAa,GAAGD,UAAU,GAAG,EAAnC;AACA,UAAME,QAAQ,GAAG,IAAID,aAArB;AACA,UAAME,CAAC,GAAG,IAAKD,QAAQ,GAAGA,QAA1B;AACA,UAAME,KAAK,GAAGpM,sCAA2BC,mCAAzC;AACA,UAAMoM,OAAO,GAAGpM,sCAA2B+E,IAAI,CAACsH,IAAL,CAAUH,CAAC,GAAGC,KAAd,CAA3C;AACAd,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCS,UAAjC,EAA6CK,OAA7C;AACA,aAAOA,OAAP;AAEH;;;WAED,wCAA+BL,UAA/B,EAA2C;AACvC;AAEA,UAAMO,OAAO,GAAG,CACZ,CAAC,EAAD,EAAK,CAAL,CADY,EAEZ,CAAC,EAAD,EAAK,IAAL,CAFY,EAGZ,CAAC,EAAD,EAAK,GAAL,CAHY,EAIZ,CAAC,EAAD,EAAK,IAAL,CAJY,EAKZ,CAAC,EAAD,EAAK,GAAL,CALY,EAMZ,CAAC,EAAD,EAAK,IAAL,CANY,EAOZ,CAAC,EAAD,EAAK,GAAL,CAPY,EAQZ,CAAC,EAAD,EAAK,GAAL,CARY,EASZ,CAAC,EAAD,EAAK,GAAL,CATY,EAUZ,CAAC,EAAD,EAAK,GAAL,CAVY,EAWZ,CAAC,CAAD,EAAI,IAAJ,CAXY,EAYZ,CAAC,CAAD,EAAI,GAAJ,CAZY,EAaZ,CAAC,CAAD,EAAI,IAAJ,CAbY,EAcZ,CAAC,CAAD,EAAI,GAAJ,CAdY,EAeZ,CAAC,CAAD,EAAI,IAAJ,CAfY,EAgBZ,CAAC,CAAD,EAAI,GAAJ,CAhBY,EAiBZ,CAAC,CAAD,EAAI,IAAJ,CAjBY,EAkBZ,CAAC,CAAD,EAAI,IAAJ,CAlBY,EAmBZ,CAAC,CAAD,EAAI,IAAJ,CAnBY,CAAhB,CAHuC,CAyBvC;;AAEA,UAAMH,KAAK,GAAGpM,sCAA2BC,mCAAzC;;AAEA,WAAK,IAAIwD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8I,OAAO,CAACnK,MAA5B,EAAoCqB,CAAC,EAArC,EAAyC;AACrC,YAAIuI,UAAU,IAAIO,OAAO,CAAC9I,CAAD,CAAP,CAAW,CAAX,CAAlB,EAAiC;AAC7B,cAAM+I,QAAQ,GAAGD,OAAO,CAAC9I,CAAD,CAAP,CAAW,CAAX,CAAjB;AACA,cAAM4I,OAAO,GAAGpM,sCAA2B+E,IAAI,CAACsH,IAAL,CAAUE,QAAQ,GAAGJ,KAArB,CAA3C,CAF6B,CAG7B;;AACA,iBAAOC,OAAP;AACH;AACJ;AACJ;;;WAGD,gCAAuB;AACnB,WAAK9C,qBAAL,IAA8B,CAA9B;AACA+B,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqC,KAAKhC,qBAA1C;;AACA,UAAI,KAAKA,qBAAL,GAA6B,CAAjC,EAAoC;AAChC,aAAKA,qBAAL,GAA6B,CAA7B;AACH;AACJ;;;WAED,qBAAY;AACR;AACA;AACA;AACA,WAAKhE,KAAL,CAAWzD,KAAX,IAAoB,CAApB;AACA,WAAK2H,WAAL,IAAoBvJ,iCAApB;AACA,WAAKwJ,SAAL;AACH;;;WAED,kCAAyB;AAAA;;AACrB,UAAI,KAAKT,cAAT,EAAyB;AACrBwD,QAAAA,qBAAqB,CAAC,YAAM;AACxB,UAAA,MAAI,CAACX,QAAL;AACH,SAFoB,CAArB;AAGH;AACJ;;;WAED,oBAAW;AAAA;;AAEP,UAAMY,YAAY,GAAG,SAAfA,YAAe,CAAC5L,IAAD,EAAU;AAC3B,eAAO,MAAI,CAACyE,KAAL,CAAW9D,OAAX,CAAmBU,MAAnB,CAA0B,UAAAJ,QAAQ;AAAA,iBAAIA,QAAQ,CAACjB,IAAT,KAAkBA,IAAlB,IAA0BiB,QAAQ,CAACV,OAAvC;AAAA,SAAlC,CAAP;AACH,OAFD;;AAIA,UAAIsL,cAAc,GAAG,KAArB,CANO,CAQP;;AAEA,UAAMC,YAAY,GAAGpN,sBAArB;AACA,UAAMqN,aAAa,GAAGzN,yBAAcI,yBAAc,KAAK0L,IAAL,CAAUjK,KAAtC,CAAtB,CAXO,CAaP;;AACA,UAAI,KAAKkI,QAAL,CAAcxG,OAAd,CAAsB,YAAtB,CAAJ,EAAyC;AACrC,aAAKuI,IAAL,CAAUnK,CAAV,IAAe,KAAKoK,SAApB;;AACA,YAAI,KAAKD,IAAL,CAAUnK,CAAV,GAAc8L,aAAlB,EAAiC;AAC7B,eAAK3B,IAAL,CAAUnK,CAAV,GAAc8L,aAAd;AACH;AACJ;;AAED,UAAI,KAAK1D,QAAL,CAAcxG,OAAd,CAAsB,WAAtB,CAAJ,EAAwC;AACpC,aAAKuI,IAAL,CAAUnK,CAAV,IAAe,KAAKoK,SAApB;;AACA,YAAI,KAAKD,IAAL,CAAUnK,CAAV,GAAc6L,YAAlB,EAAgC;AAC5B,eAAK1B,IAAL,CAAUnK,CAAV,GAAc6L,YAAd;AACH;AACJ,OA1BM,CA4BP;;;AACA,UAAI,KAAK7C,WAAT,EAAsB;AAClB,aAAKxE,KAAL,CAAWc,SAAX,CAAqB,IAAIxF,kBAAJ,CAAa,SAAb,EAAwB,KAAKqK,IAAL,CAAUnK,CAAV,GAAe,KAAKmK,IAAL,CAAUjK,KAAV,GAAkB,GAAzD,EAA+D,KAAKiK,IAAL,CAAUlK,CAAzE,EAA4EX,wBAA5E,EAA2FC,yBAA3F,CAArB;AACA,aAAKyJ,WAAL,GAAmB,KAAnB;AACH,OAhCM,CAkCP;;;AACA,UAAI,KAAK+C,QAAL,IAAiB,KAAKC,WAAtB,IAAqC,KAAK9C,cAAL,GAAsB,KAAKT,cAApE,EAAoF;AAChF,aAAKjE,KAAL,CAAWc,SAAX,CAAqB,IAAIxF,kBAAJ,CAAa,MAAb,EAAqB,KAAKkM,WAAL,CAAiBhM,CAAjB,GAAsBzB,iCAAsB,GAAjE,EAAuE,KAAKyN,WAAL,CAAiB/L,CAAjB,GAAsB1B,iCAAsB,GAAnH,EAAyH,CAAzH,EAA4H,EAA5H,CAArB;AACA,aAAKwN,QAAL,GAAgB,KAAhB;AACA,aAAK7C,cAAL;AACA,aAAK8C,WAAL,GAAmB,IAAnB;AACH;;AAED,UAAI,KAAKC,eAAT,EAA0B;AACtB,aAAKzH,KAAL,CAAWc,SAAX,CAAqB,IAAIxF,kBAAJ,CAAa,cAAb,EAA6B,CAA7B,EAAgC,EAAhC,EAAoC,EAApC,EAAwC,EAAxC,CAArB;AACA,aAAKmM,eAAL,GAAuB,KAAvB;AACH;;AAED,UAAMC,OAAO,GAAGP,YAAY,CAAC,OAAD,CAA5B;AACA,UAAMQ,OAAO,GAAGR,YAAY,CAAC,QAAD,CAA5B;AACA,UAAMS,YAAY,GAAGT,YAAY,CAAC,cAAD,CAAjC;;AAEA,UAAI,KAAK7B,aAAT,EAAwB;AACpBqC,QAAAA,OAAO,CAAC9G,OAAR,CAAgB,UAAAgH,MAAM;AAAA,iBAAIA,MAAM,CAAC/L,OAAP,GAAiB,KAArB;AAAA,SAAtB;AACA,aAAKwJ,aAAL,GAAqB,KAArB;AACA,aAAKD,UAAL,GAAkB,KAAlB;AACH;;AAED,UAAIqC,OAAO,CAAC7K,MAAR,KAAmB,CAAvB,EAA0B;AACtB,aAAKiJ,SAAL;AACH,OA3DM,CA6DP;AACA;;;AACA,UAAI,KAAKJ,cAAL,GAAsB,KAAK1B,qBAA3B,KAAqD,CAAzD,EAA4D;AACxD0D,QAAAA,OAAO,CAAC7G,OAAR,CAAgB,UAAAiH,UAAU,EAAI;AAE1B;AACAA,UAAAA,UAAU,CAACtM,CAAX,IAAiB,MAAI,CAAC+J,cAAL,GAAsB,MAAI,CAACC,UAA5C,CAH0B,CAI1B;AAEA;AACA;AACA;;AACA,cAAI,MAAI,CAACD,cAAL,GAAsB,CAAtB,IAA4BuC,UAAU,CAACtM,CAAX,GAAesM,UAAU,CAACpM,KAA3B,IAAqC,MAAI,CAACsE,KAAL,CAAW5D,SAA/E,EAA0F;AACtFgL,YAAAA,cAAc,GAAG,IAAjB;AACH,WAXyB,CAa1B;;;AACA,cAAI,MAAI,CAAC7B,cAAL,GAAsB,CAAtB,IAA2BuC,UAAU,CAACtM,CAAX,IAAgB,CAA/C,EAAkD;AAC9C4L,YAAAA,cAAc,GAAG,IAAjB;AACH,WAhByB,CAiB1B;;AACH,SAlBD,EADwD,CAqBxD;;AACA,aAAK3C,eAAL;;AACA,YAAI,KAAKA,eAAL,GAAuB,CAA3B,EAA8B;AAC1B,eAAKA,eAAL,GAAuBvK,4BAAiB,CAAxC;AACH;;AAED,aAAKwL,cAAL,GAAsB,CAAtB;AACH,OA3FM,CA8FP;AAEA;;;AACA,UAAMqC,UAAU,GAAG,EAAnB;AACAL,MAAAA,OAAO,CAAC7G,OAAR,CAAgB,UAAAiH,UAAU,EAAI;AAC1B,YAAIA,UAAU,CAAChM,OAAf,EAAwB;AACpB,cAAMkM,GAAG,GAAGF,UAAU,CAAClM,QAAX,CAAoBiJ,MAAhC;AACAkD,UAAAA,UAAU,CAACC,GAAD,CAAV,GAAkBF,UAAlB;AACH;AACJ,OALD,EAlGO,CAyGP;;AACA,UAAIrI,IAAI,CAACwI,KAAL,CAAWxI,IAAI,CAACyI,MAAL,KAAgB,EAA3B,MAAmC,CAAvC,EAA0C;AACtC,aAAKX,QAAL,GAAgB,IAAhB,CADsC,CAEtC;;AACA,aAAKC,WAAL,GAAmBO,UAAU,CAACtI,IAAI,CAACwI,KAAL,CAAWxI,IAAI,CAACyI,MAAL,KAAgBH,UAAU,CAAClL,MAA3B,GAAoC,CAA/C,CAAD,CAA7B;AACH,OA9GM,CAgHP;;;AACA,UAAI4C,IAAI,CAACwI,KAAL,CAAWxI,IAAI,CAACyI,MAAL,KAAgB,GAA3B,MAAoC,CAAxC,EAA2C;AACvC,YAAIN,YAAY,CAAC/K,MAAb,KAAwB,CAA5B,EAA+B;AAC3B,eAAK4K,eAAL,GAAuB,IAAvB;AACH;AAEJ;;AAED,UAAMU,QAAQ,GAAGhB,YAAY,CAAC,SAAD,CAA7B,CAxHO,CAyHP;;AACAgB,MAAAA,QAAQ,CAACtH,OAAT,CAAiB,UAAAiH,UAAU,EAAI;AAC3BA,QAAAA,UAAU,CAACrM,CAAX,IAAgBZ,wBAAhB;AACH,OAFD;AAIA,UAAMuN,KAAK,GAAGjB,YAAY,CAAC,MAAD,CAA1B,CA9HO,CA+HP;;AACAiB,MAAAA,KAAK,CAACvH,OAAN,CAAc,UAAAiH,UAAU,EAAI;AACxBA,QAAAA,UAAU,CAACrM,CAAX,IAAgBR,qBAAhB;AACH,OAFD,EAhIO,CAoIP;;AACA2M,MAAAA,YAAY,CAAC/G,OAAb,CAAqB,UAAAiH,UAAU,EAAI;AAC/BA,QAAAA,UAAU,CAACtM,CAAX,IAAgB,CAAhB;AACH,OAFD,EArIO,CAyIP;;AACA,UAAI4L,cAAJ,EAAoB;AAChB,aAAK7B,cAAL,IAAuB,CAAC,CAAxB;AACAmC,QAAAA,OAAO,CAAC7G,OAAR,CAAgB,UAAAwH,KAAK,EAAI;AACrBA,UAAAA,KAAK,CAAC5M,CAAN,IAAWrB,qBAAX;AACH,SAFD;AAGAgN,QAAAA,cAAc,GAAG,KAAjB;AACH;;AAED,UAAMkB,KAAK,GAAG,SAARA,KAAQ,CAACC,CAAD,EAAIC,CAAJ,EAAU;AACpB,YAAID,CAAC,CAAC/M,CAAF,GAAMgN,CAAC,CAAChN,CAAF,GAAMgN,CAAC,CAAC9M,KAAd,IAAuB6M,CAAC,CAAC/M,CAAF,GAAM+M,CAAC,CAAC7M,KAAR,GAAgB8M,CAAC,CAAChN,CAA7C,EAAgD;AAC5C,cAAI+M,CAAC,CAAC9M,CAAF,GAAM+M,CAAC,CAAC/M,CAAF,GAAM+M,CAAC,CAAC7M,MAAd,IAAwB4M,CAAC,CAAC9M,CAAF,GAAM8M,CAAC,CAAC5M,MAAR,GAAiB6M,CAAC,CAAC/M,CAA/C,EAAkD;AAC9C,mBAAO,IAAP;AACH;AACJ;AACJ,OAND,CAlJO,CA2JP;AAEA;;;AACA0M,MAAAA,QAAQ,CAACtH,OAAT,CAAiB,UAAA4H,OAAO,EAAI;AAExBb,QAAAA,YAAY,CAAC/G,OAAb,CAAqB,UAAA6H,WAAW,EAAI;AAChC,cAAI,MAAI,CAACnE,iBAAL,IAA0B+D,KAAK,CAACG,OAAD,EAAUC,WAAV,CAAnC,EAA2D;AACvDA,YAAAA,WAAW,CAAC5M,OAAZ,GAAsB,KAAtB;AACA2M,YAAAA,OAAO,CAAC3M,OAAR,GAAkB,KAAlB;AACA,YAAA,MAAI,CAACyI,iBAAL;AACA,YAAA,MAAI,CAACvE,KAAL,CAAWgC,KAAX,IAAoB,IAApB;AACH;AAEJ,SARD;AAUA0F,QAAAA,OAAO,CAAC7G,OAAR,CAAgB,UAAAwH,KAAK,EAAI;AACrB,cAAI,MAAI,CAAC9D,iBAAL,IAA0B+D,KAAK,CAACG,OAAD,EAAUJ,KAAV,CAAnC,EAAqD;AACjDA,YAAAA,KAAK,CAACvM,OAAN,GAAgB,KAAhB;AACA2M,YAAAA,OAAO,CAAC3M,OAAR,GAAkB,KAAlB;AACA,YAAA,MAAI,CAACyI,iBAAL;;AACA,gBAAI8D,KAAK,CAACzM,QAAN,CAAekJ,GAAf,GAAqB,CAAzB,EAA4B;AACxB,cAAA,MAAI,CAAC9E,KAAL,CAAWgC,KAAX,IAAoB,EAApB;AACH,aAFD,MAEO,IAAIqG,KAAK,CAACzM,QAAN,CAAekJ,GAAf,GAAqB,CAAzB,EAA4B;AAC/B,cAAA,MAAI,CAAC9E,KAAL,CAAWgC,KAAX,IAAoB,EAApB;AACH,aAFM,MAEA;AACH,cAAA,MAAI,CAAChC,KAAL,CAAWgC,KAAX,IAAoB,EAApB;AACH,aAVgD,CAYjD;AACA;AACA;AACA;;;AAEA,YAAA,MAAI,CAACgC,qBAAL,GAA6B,MAAI,CAACyB,8BAAL,CAAoCiC,OAAO,CAAC7K,MAAR,GAAiB,CAArD,CAA7B;AACH;AACJ,SApBD;AAsBA8K,QAAAA,OAAO,CAAC9G,OAAR,CAAgB,UAAAgH,MAAM,EAAI;AACtB,cAAI,MAAI,CAACtD,iBAAL,IAA0B+D,KAAK,CAACG,OAAD,EAAUZ,MAAV,CAAnC,EAAsD;AAClDA,YAAAA,MAAM,CAAC/L,OAAP,GAAiB,KAAjB,CADkD,CAGlD;AACA;;AACA2M,YAAAA,OAAO,CAAC3M,OAAR,GAAkB,KAAlB;AACA,YAAA,MAAI,CAACyI,iBAAL,GANkD,CAQlD;AAEA;AACH;AACJ,SAbD,EAlCwB,CAiDxB;;AACA,YAAIkE,OAAO,CAAChN,CAAR,GAAY,CAAhB,EAAmB;AACfgN,UAAAA,OAAO,CAAC3M,OAAR,GAAkB,KAAlB;AACA,UAAA,MAAI,CAACyI,iBAAL;AACH;AACJ,OAtDD,EA9JO,CAsNP;;AACA6D,MAAAA,KAAK,CAACvH,OAAN,CAAc,UAAA8H,IAAI,EAAI;AAClB;AACA,YAAIL,KAAK,CAACK,IAAD,EAAO,MAAI,CAAChD,IAAZ,CAAT,EAA4B;AACxBgD,UAAAA,IAAI,CAAC7M,OAAL,GAAe,KAAf;AACA,UAAA,MAAI,CAAC4I,cAAL;AAEA,UAAA,MAAI,CAACiB,IAAL,CAAU5D,KAAV;AACA,UAAA,MAAI,CAAC/B,KAAL,CAAW+B,KAAX,GALwB,CAMxB;AACH;;AAED4F,QAAAA,OAAO,CAAC9G,OAAR,CAAgB,UAAAgH,MAAM,EAAI;AACtB,cAAIS,KAAK,CAACK,IAAD,EAAOd,MAAP,CAAT,EAAyB;AACrBc,YAAAA,IAAI,CAAC7M,OAAL,GAAe,KAAf;AACA+L,YAAAA,MAAM,CAAC/L,OAAP,GAAiB,KAAjB;AACA,YAAA,MAAI,CAAC4I,cAAL;AACH;AACJ,SAND,EAXkB,CAmBlB;;AACA,YAAIiE,IAAI,CAAClN,CAAL,GAAS,MAAI,CAACuE,KAAL,CAAW3D,UAAxB,EAAoC;AAChCsM,UAAAA,IAAI,CAAC7M,OAAL,GAAe,KAAf;AACA,UAAA,MAAI,CAAC4I,cAAL;AACH;;AAED,YAAI,MAAI,CAACA,cAAL,GAAsB,CAA1B,EAA6B;AACzB,UAAA,MAAI,CAACA,cAAL,GAAsB,CAAtB;AACH;AACJ,OA5BD,EAvNO,CAqPP;;AACAgD,MAAAA,OAAO,CAAC7G,OAAR,CAAgB,UAAAwH,KAAK,EAAI;AACrB,YAAI,MAAI,CAAChD,UAAL,IAAmBgD,KAAK,CAAC5M,CAAN,IAAWlB,6BAAlC,EAAsD;AAClD;AACA,UAAA,MAAI,CAAC+K,aAAL,GAAqB,IAArB;AAEH;;AACD,YAAI+C,KAAK,CAAC5M,CAAN,IAAWjB,6BAAf,EAAmC;AAC/B,UAAA,MAAI,CAACmJ,UAAL,GAAkB,IAAlB;AACH;AACJ,OATD,EAtPO,CAiQP;;AACAiE,MAAAA,YAAY,CAAC/G,OAAb,CAAqB,UAAA6H,WAAW,EAAI;AAChC,YAAIA,WAAW,CAAClN,CAAZ,IAAiB3B,qBAArB,EAAiC;AAC7B6O,UAAAA,WAAW,CAAC5M,OAAZ,GAAsB,KAAtB;AACH;AACJ,OAJD;AAMA,WAAKgI,QAAL,CAAcqC,MAAd,GAxQO,CA2QP;;AACA,WAAKT,cAAL;;AAEA,UAAI,KAAK1F,KAAL,CAAW+B,KAAX,KAAqB,CAAzB,EAA4B;AACxB,aAAK4B,UAAL,GAAkB,IAAlB;AACH;;AAED,UAAI,KAAKA,UAAT,EAAqB;AACjB,aAAKiF,QAAL;AACH;;AAGD,UAAIvN,8BAAJ,EAAyB;AACrB,YAAI,CAAC,KAAKoI,QAAN,IAAkB,KAAKC,cAA3B,EAA2C;AACvC,eAAK0C,sBAAL;AACH;AACJ,OAJD,MAIO;AAEH,YAAI,KAAK3C,QAAL,IAAiB,CAAC,KAAKC,cAA3B,EAA2C;AACvC8C,UAAAA,aAAa,CAAC,KAAK3C,QAAN,CAAb;AACH;AACJ,OAhSM,CAkSP;;;AACA,WAAK7D,KAAL,CAAW6I,iBAAX;AAEA,UAAMC,QAAQ,GAAI,KAAK9E,qBAAL,GAA6B,GAA/C;AACA+B,MAAAA,OAAO,CAACC,GAAR,CAAY8C,QAAZ;AACA,WAAKhL,UAAL,IAAmB,CAAnB;;AACA,UAAG,KAAKA,UAAL,IAAmB2B,IAAI,CAACsJ,GAAL,CAASD,QAAT,EAAmB,EAAnB,CAAtB,EAA8C;AAC1C;AACA,aAAK/E,YAAL,CAAkBiF,QAAlB;AACA,aAAKlL,UAAL,GAAkB,CAAlB;AACH;AAEJ;;;;iCA1gBqBmL;;;AA8gB1B9G,MAAM,CAAC+G,IAAP,GAAc,IAAI3F,IAAJ,EAAd;AACApB,MAAM,CAAC+G,IAAP,CAAY5E,IAAZ","file":"game.7bbe06d5.js","sourceRoot":"../src","sourcesContent":["\nexport const NUM_LIVES = 3;\n\nexport const GAME_WIDTH = 500;\nexport const GAME_HEIGHT = 500;\nexport const DEFAULT_SPRITE_SIZE = 32;\n\nexport const TANK_SPEED = 1.5;\nexport const TANK_MARGIN = 20;\n\nexport const NUM_ENEMY_ROWS = 5;\nexport const ENEMY_SPEED = 5;\nexport const ENEMY_SIZE = 24;\nexport const ENEMY_X_SPACE = 15;\nexport const ENEMY_Y_SPACE = 15;\nexport const ENEMY_SHIELD_LIMIT = 360;\nexport const ENEMY_GROUND_LIMIT = 400;\n\nexport const ENEMY_STAGGER_FRAMES_MAX = 50;\nexport const ENEMY_STAGGER_FRAMES_MIN = 1;\nexport const ENEMY_LEVEL_INCREASE_Y = 20;\n\nexport const GAME_LOOPS_PER_SECOND = 100;\n\nexport const MISSILE_SPEED = 5;\nexport const MISSILE_WIDTH = 1;\nexport const MISSILE_HEIGHT = 6;\nexport const MAX_ACTIVE_MISSILES = 5;\n\nexport const BOMB_SPEED = 2;\nexport const MAX_BOMBS = 1;\n\nexport const SHIELD_WIDTH = 60;\nexport const SHIELD_HEIGHT = 40;\n\n\nexport const USE_ANIMATION_FRAME = false;\n","export class GameItem {\n\n    constructor(type, x, y, width, height, metadata) {\n        this.type = type;\n        this.sprite = type;\n        this.x = x;\n        this.y = y;\n        this.width = width || 10;\n        this.height = height || 10;\n        this.isAlive = true;\n        this.metadata = metadata;\n        this.halfWidth = width * 0.5;\n        this.halfHeight = height * 0.5;\n    }\n\n}","import { GAME_HEIGHT, GAME_WIDTH } from \"./constants.js\";\n\nexport class GameModel {\n\n    constructor() {\n        this.sprites = [];\n        this.numSprites = 0;\n        this.gameWidth = GAME_WIDTH;\n        this.gameHeight = GAME_HEIGHT;\n        this.uniqueID = 0;\n        this.level = 1;\n    }\n\n    addSprite(gameItem) {\n        this.sprites.push(gameItem);\n        gameItem.id = 'item' + this.uniqueID;\n        this.numSprites++;\n        this.uniqueID++;\n        return gameItem;\n    }\n\n    // TODO - this made bombs turn into tank sprites?  prob reference thing\n    removeDeadSprites() {\n        const aliveSprites = this.sprites.filter(gameItem => gameItem.isAlive);\n        this.sprites = aliveSprites;\n        this.numSprites = aliveSprites.length;\n        \n    }\n\n}","export class KeyboardManager {\n\n    constructor() {\n        document.addEventListener('keydown', (event) => this.keyDownHandler(event));\n        document.addEventListener('keyup', (event) => this.keyUpHandler(event));\n        this.keyDown = {};\n    }\n\n    keyDownHandler(event) {\n        event.preventDefault()\n        this.keyDown[event.code] = true;\n    }\n\n    keyUpHandler(event) {\n        event.preventDefault()\n        this.keyDown[event.code] = false;\n    }\n\n}\n","export class SpriteAnimation {\n\n    constructor(animation) {\n        this._animation = animation;\n        this.currentFrame = 0;\n    }\n\n    get currentFrameSprite() {\n        return this._animation[this.currentFrame];\n    }\n\n    nextFrame() {\n        this.currentFrame++;\n        if (this.currentFrame > this._animation.length - 1) {\n            this.currentFrame = 0;\n        }\n    }\n}","import { SpriteAnimation } from \"./sprite-animation.js\";\n\nexport class SpriteManager {\n\n    constructor() {\n        this.spriteImageDatas = {};\n        this.sprites = [];\n        this.spriteAnimations = {};\n        this.frameCount = 0;\n    }\n\n    addAnimation(name, spriteData) {\n        const arr = [];\n        for (let i = 0; i < spriteData.frames.length; i++) {\n\n            const imageData = this.createSpriteImageData(spriteData.frames[i], spriteData.colour);\n            arr.push(imageData);\n\n        }\n        this.spriteImageDatas[name] = arr;\n    }\n\n    getAnimation(name) {\n\n        return this.spriteImageDatas[name];\n    }\n\n    // Pairing a gameItem with an animation state\n    addAnimationSpriteState(gameItemID, animationName) {\n\n        const animation = this.getAnimation(animationName);\n\n        if (!animation) {\n            return;\n        }\n        const spriteAnimation = new SpriteAnimation(animation);\n        this.spriteAnimations[gameItemID] = spriteAnimation;\n    }\n\n    // this is always returning tank\n    getAnimationSpriteState(gameItemID) {\n        const state = this.spriteAnimations[gameItemID];\n        if (!state) {\n            //console.log('No state found');\n            return null;\n        } else {\n            return state;\n        }\n        //return this.spriteAnimations[gameItem];\n    }\n\n\n    drawToSprite(canvas, gameItemID) {\n        const ctx = canvas.getContext('2d');\n        const animationSpriteState = this.getAnimationSpriteState(gameItemID);\n        if (!animationSpriteState) {\n            return;\n        }\n        const imageData = animationSpriteState.currentFrameSprite;\n        // const imageData = this.spriteImageDatas[gameItem.type][0];\n        canvas.width = imageData.width;\n        canvas.height = imageData.height;\n        ctx.putImageData(imageData, 0, 0);\n    }\n\n    createSpriteImageData(spriteData, colour) {\n        const spriteWidth = spriteData[0].length;\n        const spriteHeight = spriteData.length;\n        const spriteImageData = new ImageData(spriteWidth, spriteHeight);\n\n\n\n        for (let y = 0; y < spriteHeight; y++) {\n            for (let x = 0; x < spriteWidth; x++) {\n                this.setPixel(spriteImageData, x, y, spriteData[y][x] ? colour : null);\n            }\n        }\n\n        return spriteImageData;\n    }\n\n\n    setPixel(imageData, x, y, color) {\n        x = Math.round(x);\n        y = Math.round(y);\n        const offset = ((y * imageData.width) + x) * 4;\n        imageData.data[offset] = (color >> 16);\n        imageData.data[offset + 1] = (color >> 8) & 0xff;\n        imageData.data[offset + 2] = (color) & 0xff;\n        imageData.data[offset + 3] = color === null ? 0 : 0xff;\n    }\n\n    update() {\n        if (this.frameCount > 10000) {\n            for (var prop in this.spriteAnimations) {\n                const spriteAnimation = this.spriteAnimations[prop];\n                // TODO why is there sometimes not a spriteAnimation?\n                if (spriteAnimation) {\n                    spriteAnimation.nextFrame();\n                }\n            }\n            this.frameCount = 0;\n        }\n        this.frameCount++;\n        //debug('frameCount: ' + this.frameCount);\n        //console.log('SpriteManager.frameCount', this.frameCount);\n\n    }\n\n}","import { SpriteManager } from \"./sprite-manager.js\";\n\nexport class Renderer {\n\n\n    constructor(model) {\n        this.model = model;\n        this.spriteManager = new SpriteManager();\n        this.frameCount = 0;\n        //this.itemToSprite = {};\n        // this.init();\n    }\n\n    clear() {\n        const canvas = document.querySelector('[game-canvas]');\n        canvas.innerHTML = '';\n\n    }\n\n    init() {\n\n        const SPRITES = {\n            MYSTERY_SHIP:\n            {\n                colour: 0xff0000,\n                frames: [\n                    [\n                        [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0],\n                        [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],\n                        [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0],\n                        [0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0],\n                        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n                        [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0],\n                        [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0]\n                    ]\n                ]\n            },\n            TANK:\n            {\n                colour: 0x00ff00,\n                frames: [\n                    [\n                        [0, 0, 0, 0, 1, 1, 0, 0, 0, 0],\n                        [0, 0, 0, 0, 1, 1, 0, 0, 0, 0],\n                        [0, 0, 0, 1, 1, 1, 1, 0, 0, 0],\n                        [0, 0, 1, 1, 1, 1, 1, 1, 0, 0],\n                        [0, 1, 1, 1, 1, 1, 1, 1, 1, 0],\n                        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n                        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n                        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n                        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n                        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\n                    ],\n                ]\n            },\n            ENEMY1: {\n                colour: 0xff0000,\n                frames: [\n                    [\n                        [0, 0, 0, 0, 1, 1, 0, 0, 0, 0],\n                        [0, 0, 0, 1, 1, 1, 1, 0, 0, 0],\n                        [0, 0, 1, 1, 1, 1, 1, 1, 0, 0],\n                        [0, 1, 1, 0, 1, 1, 0, 1, 1, 0],\n                        [0, 1, 1, 1, 1, 1, 1, 1, 1, 0],\n                        [0, 0, 1, 0, 1, 1, 0, 1, 0, 0],\n                        [0, 1, 0, 0, 0, 0, 0, 0, 1, 0],\n                        [0, 0, 1, 0, 0, 0, 0, 1, 0, 0]\n                    ],\n                    [\n                        [0, 0, 0, 0, 1, 1, 0, 0, 0, 0],\n                        [0, 0, 0, 1, 1, 1, 1, 0, 0, 0],\n                        [0, 0, 1, 1, 1, 1, 1, 1, 0, 0],\n                        [0, 1, 1, 0, 1, 1, 0, 1, 1, 0],\n                        [0, 1, 1, 1, 1, 1, 1, 1, 1, 0],\n                        [0, 0, 0, 1, 0, 0, 1, 0, 0, 0],\n                        [0, 0, 1, 0, 1, 1, 0, 1, 0, 0],\n                        [0, 1, 0, 1, 0, 0, 1, 0, 1, 0]\n                    ]\n                ]\n            },\n            ENEMY2: {\n                colour: 0x00ff00,\n                frames: [\n                    [\n                        [0, 0, 1, 0, 0, 0, 0, 1, 0, 0],\n                        [0, 0, 0, 1, 0, 0, 1, 0, 0, 0],\n                        [0, 0, 1, 1, 1, 1, 1, 1, 0, 0],\n                        [0, 1, 1, 0, 1, 1, 0, 1, 1, 0],\n                        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n                        [1, 0, 1, 1, 1, 1, 1, 1, 0, 1],\n                        [1, 0, 1, 0, 0, 0, 0, 1, 0, 1],\n                        [0, 0, 0, 1, 0, 0, 1, 0, 0, 0]\n                    ],\n                    [\n                        [0, 0, 1, 0, 0, 0, 0, 1, 0, 0],\n                        [1, 0, 0, 1, 0, 0, 1, 0, 0, 1],\n                        [1, 0, 1, 1, 1, 1, 1, 1, 0, 1],\n                        [1, 1, 1, 0, 1, 1, 0, 1, 1, 1],\n                        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n                        [0, 1, 1, 1, 1, 1, 1, 1, 1, 0],\n                        [0, 0, 1, 0, 0, 0, 0, 1, 0, 0],\n                        [0, 1, 0, 0, 0, 0, 0, 0, 1, 0]\n                    ]\n                ]\n            },\n            ENEMY3: {\n                colour: 0x0000ff,\n                frames: [\n                    [\n                        [0, 0, 0, 1, 1, 1, 1, 0, 0, 0],\n                        [0, 1, 1, 1, 1, 1, 1, 1, 1, 0],\n                        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n                        [1, 1, 0, 0, 1, 1, 0, 0, 1, 1],\n                        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n                        [0, 0, 1, 1, 0, 0, 1, 1, 0, 0],\n                        [0, 1, 1, 0, 1, 1, 0, 1, 1, 0],\n                        [1, 1, 0, 0, 0, 0, 0, 0, 1, 1]\n                    ],\n                    [\n                        [0, 0, 0, 1, 1, 1, 1, 0, 0, 0],\n                        [0, 1, 1, 1, 1, 1, 1, 1, 1, 0],\n                        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n                        [1, 1, 0, 0, 1, 1, 0, 0, 1, 1],\n                        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n                        [0, 0, 1, 1, 0, 0, 1, 1, 0, 0],\n                        [0, 1, 1, 0, 1, 1, 0, 1, 1, 0],\n                        [0, 0, 1, 1, 0, 0, 1, 1, 0, 0]\n                    ]\n                ]\n            }\n    \n    \n        }\n\n        document.querySelector('[game-canvas]').style.setProperty('width', `${this.model.gameWidth}px`)\n        document.querySelector('[game-screen]').style.setProperty('width', `${this.model.gameWidth}px`)\n\n\n        // Set up sprite data\n\n        // Add sprite animations by name\n        this.spriteManager.addAnimation('tank', SPRITES.TANK);\n        this.spriteManager.addAnimation('enemy', SPRITES.ENEMY1);\n        this.spriteManager.addAnimation('enemy1', SPRITES.ENEMY1);\n        this.spriteManager.addAnimation('enemy2', SPRITES.ENEMY2);\n        this.spriteManager.addAnimation('enemy3', SPRITES.ENEMY2);\n        this.spriteManager.addAnimation('enemy4', SPRITES.ENEMY3);\n        this.spriteManager.addAnimation('enemy5', SPRITES.ENEMY3);\n        this.spriteManager.addAnimation('mystery-ship', SPRITES.MYSTERY_SHIP);\n       \n        // this.model.sprites.forEach((gameItem) => {\n        //     // Set up animation states for each sprite in sprite manager\n        //     this.spriteManager.addAnimationSpriteState(gameItem, gameItem.type);\n        // })\n\n\n\n\n        this.model.sprites.forEach((gameItem) => {\n            this.addSprite(gameItem);\n            //this.itemToSprite[gameItem] = e;\n        })\n    }\n\n    addSprite(gameItem) {\n\n        const gameDiv = document.querySelector('[game-canvas]')\n        const e = document.createElement('div');\n        e.setAttribute('sprite', true);\n        e.setAttribute('itemID', gameItem.id);\n        e.setAttribute(gameItem.type, true);\n\n        for (let prop in gameItem.metadata) {\n            e.setAttribute(prop, gameItem.metadata[prop]);\n        }\n\n        // Set size in css\n        e.style.width = `${gameItem.width}px`;\n        e.style.height = `${gameItem.height}px`;\n\n        //Add canvas to div\n        const c = document.createElement('canvas');\n        c.setAttribute('width', gameItem.width);\n        c.setAttribute('height', gameItem.height);\n        e.appendChild(c);\n\n        this.spriteManager.addAnimationSpriteState(gameItem.id, gameItem.sprite || gameItem.type);\n\n        // if (gameItem.type === 'tank' || gameItem.type === 'enemy') {\n        //     this.spriteManager.drawToSprite(c, gameItem.id);\n        // }\n\n\n\n        //e.innerText = gameItem.type;\n        gameDiv.appendChild(e);\n        return e;\n    }\n\n    removeSprite(gameItem) {\n        const sprite = gameDiv.querySelector(`[itemID=\"${gameItem.id}\"]`) || this.addSprite(gameItem);\n        //sprite.style.left = 2000 + 'px';\n    }\n\n    render(renderCount) {\n        const gameDiv = document.querySelector('[game-canvas]')\n        this.model.sprites.forEach((gameItem) => {\n            const sprite = gameDiv.querySelector(`[itemID=\"${gameItem.id}\"]`) || this.addSprite(gameItem);\n            sprite.style.left = gameItem.x + 'px';\n            sprite.style.top = gameItem.y + 'px';\n\n            // Move animations on\n            // todo - this isnt the place to do this, just a test\n            // if(renderCount % 100 === 0) {\n            //     this.spriteManager.update();\n            // }\n\n            //drawToSprite(canvas, gameItem)\n            const c = sprite.querySelector('canvas');\n            // this is where the issue is with everything being tank sprites\n\n            // this.frameCount++;\n\n            // if (this.frameCount % 100 == 0) {\n            this.spriteManager.update();\n            this.spriteManager.drawToSprite(c, gameItem.id);\n            // }\n\n\n\n            // Temp hide dead sprites\n            if (!gameItem.isAlive) {\n                sprite.parentElement.removeChild(sprite);\n                sprite.style.display = 'none';\n            }\n\n        })\n\n        document.querySelector('[game-footer]').innerText = `LIVES: ${this.model.lives}`;\n        document.querySelector('[score-text]').innerText = `${this.model.score}`;\n        document.querySelector('[level-text]').innerText = `${this.model.level}`;\n        \n\n    }\n}","export class SoundManager {\n\n\n\n    constructor() {\n        this.audio = new (window.AudioContext || window.webkitAudioContext)();\n        this.alienSoundToggle = false;\n        this.tune = [55, 50, 46, 65];\n        this.currentNote = 0;\n    }\n\n    soundAlien(frequency) {\n        const osc = this.audio.createOscillator();\n        osc.type = 'sawtooth';\n        osc.frequency.value = frequency;\n\n        this.alienSoundToggle = !this.alienSoundToggle;\n    \n        const vol = this.audio.createGain();\n    \n        vol.gain.value = 0.5;\n        osc.connect(vol);\n    \n        vol.connect(this.audio.destination)\n    \n        osc.start();\n        osc.stop(this.audio.currentTime + 0.1);\n    }\n\n    playNote(perc) {\n        this.soundAlien(this.tune[this.currentNote]);\n        this.currentNote++;\n        if(this.currentNote > this.tune.length - 1) {\n            this.currentNote = 0;\n        }\n    }\n\n\n\n}","import { BOMB_SPEED, DEFAULT_SPRITE_SIZE, ENEMY_GROUND_LIMIT, ENEMY_SIZE, ENEMY_LEVEL_INCREASE_Y, ENEMY_STAGGER_FRAMES_MIN, ENEMY_STAGGER_FRAMES_MAX, ENEMY_X_SPACE, ENEMY_Y_SPACE, ENEMY_SPEED, ENEMY_SHIELD_LIMIT, GAME_LOOPS_PER_SECOND, GAME_WIDTH, GAME_HEIGHT, MAX_ACTIVE_MISSILES, MISSILE_WIDTH, MISSILE_HEIGHT, MISSILE_SPEED, NUM_ENEMY_ROWS, NUM_LIVES, SHIELD_WIDTH, TANK_SPEED, TANK_MARGIN, USE_ANIMATION_FRAME } from \"./constants.js\";\nimport { GameItem } from \"./game-item.js\";\nimport { GameModel } from \"./game-model.js\";\nimport { KeyboardManager } from \"./keyboard-manager.js\";\nimport { Renderer } from \"./renderer.js\";\nimport { SoundManager } from \"./sound-manager.js\";\n\nexport class Game extends EventTarget {\n\n    constructor() {\n        super();\n    }\n\n    init() {\n        this.gameLoopsPerSecond = GAME_LOOPS_PER_SECOND;\n        this.isPaused = true;\n        this.frameCount = 0;\n        this.renderCount = 0;\n        this.gameInProgress = false;\n        this.gameIsOver = false;\n        this.keyboard = new KeyboardManager();\n        this.model = new GameModel();\n        this.interval = null;\n        this.renderer = new Renderer(this.model);\n        this.soundManager = new SoundManager();\n        this.renderCount = 0;\n\n        // Initial game values\n        this.model.level = 1;\n        this.model.lives = NUM_LIVES;\n        this.model.score = 0;\n        this.enemyStaggerFrequency = ENEMY_STAGGER_FRAMES_MAX;\n        this.maxActiveBombs = 1;\n        this.enemyStartY = 50;\n        this.initLevel()\n\n        // Fire missile\n        document.addEventListener('keyup', this.keyUpHandler.bind(this));\n\n        this.renderer.clear();\n        this.renderer.init();\n    }\n\n    keyUpHandler(event) {\n        if (event.code == 'Space' && this.numActiveMissiles < MAX_ACTIVE_MISSILES) {\n            this.fireMissile = true;\n            this.numActiveMissiles++;\n        }\n    }\n\n    // Just resets the game without clearing game model data\n    initLevel() {\n\n        this.model.sprites = [];\n        this.renderer.clear()\n\n        // Space Invaders Specific Stuff\n        this.currentEnemyRow = NUM_ENEMY_ROWS;\n        this.numActiveMissiles = 0;\n        this.numActiveBombs = 0;\n\n        // Create Enemies\n        for (var y = 0; y < NUM_ENEMY_ROWS; y++) {\n            for (var x = 0; x < 11; x++) {\n                const enemyType = 'enemy' + (y + 1);\n                const enemyGameItem = new GameItem('enemy', (ENEMY_SIZE + ENEMY_X_SPACE) * x, ((ENEMY_SIZE + ENEMY_Y_SPACE) * y) + this.enemyStartY, ENEMY_SIZE, ENEMY_SIZE, { column: x, row: y, sprite: enemyType })\n                enemyGameItem.sprite = enemyType;\n                this.model.addSprite(enemyGameItem);\n            }\n        }\n\n        const createShield = (xPos, yPos) => {\n            for (let y = 0; y < 5; y++) {\n                for (let x = 0; x < 6; x++) {\n                    // const blockSize = 10;\n                    const blockWidth = 10;\n                    const blockHeight = 10;\n                    const skip = y === 4 && x > 1 && x < 4;\n                    if (!skip) {\n                        this.model.addSprite(new GameItem('shield', xPos + (blockWidth * x), yPos + (blockHeight * y), blockWidth, blockHeight));\n                    }\n                }\n            }\n        }\n\n        // Create shields\n        for (var x = 0; x < 4; x++) {\n            createShield(50 + (SHIELD_WIDTH * x) + (50 * x), 400);\n        }\n\n        this.hasShields = true;\n        this.removeShields = false;\n        this.enemyDirection = 1;\n        this.enemySpeed = ENEMY_SPEED;\n        this.enemyStaggerFrequency = this.enemyStaggerFrequency = this.calculateEnemyStaggerFrequency(55);\n        this.moveEnemyCount = 0;\n\n        // Create Tank\n        this.tank = this.model.addSprite(new GameItem('tank', this.model.gameWidth / 2, this.model.gameHeight - DEFAULT_SPRITE_SIZE, 24, 24));\n        this.tankSpeed = TANK_SPEED;\n        this.fireMissile = false;\n    }\n\n    levelComplete() {\n        // TODO - Add game over restart from scratch\n        alert('LEVEL COMPLETE');\n        // this.stop();\n        this.nextLevel();\n        // this.start();\n    }\n\n    gameOver() {\n        console.log('GAME OVER');\n        this.stop();\n        this.dispatchEvent(new CustomEvent('GAME_OVER'));\n    }\n\n    start() {\n        if (this.gameInProgress) {\n            return;\n        }\n        this.isPaused = false;\n        this.gameInProgress = true;\n        this.renderer.render();\n\n        if (USE_ANIMATION_FRAME) {\n            this.animationFrameGameLoop()\n        } else {\n            const intervalSpeed = Math.round(1000 / this.gameLoopsPerSecond);\n            console.log('intervalSpeed', intervalSpeed);\n            this.interval = setInterval(() => {\n                this.gameLoop();\n            }, intervalSpeed);\n        }\n    }\n\n    stop() {\n        this.isPaused = true;\n        clearInterval(this.interval);\n        this.gameInProgress = false;\n    }\n\n    restart() {\n        // Cleanup\n        //document.removeEventListener('keyup', this.keyUpHandler);\n\n        this.init();\n    }\n\n\n    _calculateEnemyStaggerFrequency(numEnemies) {\n\n        const percRemaining = numEnemies / 55;\n        const percGone = 1 - percRemaining;\n        const r = 1 - (percGone * percGone);\n        const range = ENEMY_STAGGER_FRAMES_MAX - ENEMY_STAGGER_FRAMES_MIN;\n        const stagger = ENEMY_STAGGER_FRAMES_MIN + Math.ceil(r * range);\n        console.log('New Enemy Stagger', numEnemies, stagger);\n        return stagger;\n\n    }\n\n    calculateEnemyStaggerFrequency(numEnemies) {\n        // For now hard coding this but needs some kind of \"hockey curve\" formula getting much faster at the end\n\n        const sectors = [\n            [55, 1],\n            [50, 0.95],\n            [45, 0.9],\n            [40, 0.85],\n            [35, 0.8],\n            [30, 0.75],\n            [25, 0.7],\n            [20, 0.6],\n            [15, 0.5],\n            [10, 0.4],\n            [9, 0.35],\n            [8, 0.3],\n            [7, 0.25],\n            [6, 0.2],\n            [5, 0.15],\n            [4, 0.1],\n            [3, 0.07],\n            [2, 0.05],\n            [1, 0.01]\n        ];\n\n        // TODO - ES6/functional way of doing this\n\n        const range = ENEMY_STAGGER_FRAMES_MAX - ENEMY_STAGGER_FRAMES_MIN;\n\n        for (let i = 0; i < sectors.length; i++) {\n            if (numEnemies >= sectors[i][0]) {\n                const fraction = sectors[i][1];\n                const stagger = ENEMY_STAGGER_FRAMES_MIN + Math.ceil(fraction * range);\n                // console.log('new stagger ', numEnemies, fraction, stagger);\n                return stagger;\n            }\n        }\n    }\n\n\n    speedUpEnemyMovement() {\n        this.enemyStaggerFrequency -= 2;\n        console.log('New Stagger Frequency', this.enemyStaggerFrequency)\n        if (this.enemyStaggerFrequency < 1) {\n            this.enemyStaggerFrequency = 1;\n        }\n    }\n\n    nextLevel() {\n        // Set things like speed, num Missiles etc here\n        //this.speedUpEnemyMovement();\n        //this.maxActiveBombs++;\n        this.model.level += 1;\n        this.enemyStartY += ENEMY_LEVEL_INCREASE_Y;\n        this.initLevel();\n    }\n\n    animationFrameGameLoop() {\n        if (this.gameInProgress) {\n            requestAnimationFrame(() => {\n                this.gameLoop();\n            })\n        }\n    }\n\n    gameLoop() {\n\n        const getLiveItems = (type) => {\n            return this.model.sprites.filter(gameItem => gameItem.type === type && gameItem.isAlive)\n        }\n\n        let enemiesHitWall = false;\n\n        // Move all sprites before calculating anything\n\n        const tankWallLeft = TANK_MARGIN;\n        const tankWallRight = GAME_WIDTH - (TANK_MARGIN + this.tank.width);\n\n        // Move Tank\n        if (this.keyboard.keyDown['ArrowRight']) {\n            this.tank.x += this.tankSpeed;\n            if (this.tank.x > tankWallRight) {\n                this.tank.x = tankWallRight;\n            }\n        }\n\n        if (this.keyboard.keyDown['ArrowLeft']) {\n            this.tank.x -= this.tankSpeed;\n            if (this.tank.x < tankWallLeft) {\n                this.tank.x = tankWallLeft;\n            }\n        }\n\n        // Create Missile\n        if (this.fireMissile) {\n            this.model.addSprite(new GameItem('missile', this.tank.x + (this.tank.width * 0.5), this.tank.y, MISSILE_WIDTH, MISSILE_HEIGHT));\n            this.fireMissile = false;\n        }\n\n        // Create Enemy Bomb\n        if (this.fireBomb && this.firingEnemy && this.numActiveBombs < this.maxActiveBombs) {\n            this.model.addSprite(new GameItem('bomb', this.firingEnemy.x + (DEFAULT_SPRITE_SIZE * 0.5), this.firingEnemy.y + (DEFAULT_SPRITE_SIZE * 0.5), 2, 20));\n            this.fireBomb = false;\n            this.numActiveBombs++;\n            this.firingEnemy = null;\n        }\n\n        if (this.fireMysteryShip) {\n            this.model.addSprite(new GameItem('mystery-ship', 0, 10, 40, 10));\n            this.fireMysteryShip = false;\n        }\n\n        const enemies = getLiveItems('enemy');\n        const shields = getLiveItems('shield');\n        const mysteryShips = getLiveItems('mystery-ship');\n\n        if (this.removeShields) {\n            shields.forEach(shield => shield.isAlive = false);\n            this.removeShields = false;\n            this.hasShields = false;\n        }\n\n        if (enemies.length === 0) {\n            this.nextLevel();\n        }\n\n        // Move enemies\n        // Staggered enemy movement by row\n        if (this.moveEnemyCount % this.enemyStaggerFrequency === 0) {\n            enemies.forEach(gameSprite => {\n\n                //if (gameSprite.metadata.row === this.currentEnemyRow) {\n                gameSprite.x += (this.enemyDirection * this.enemySpeed);\n                //}\n\n                // TODO - We will need to keep track of min - max rows\n                // if (gameSprite.metadata.row === 0) {\n                // Check if hit right wall\n                if (this.enemyDirection > 0 && (gameSprite.x + gameSprite.width) >= this.model.gameWidth) {\n                    enemiesHitWall = true;\n                }\n\n                // Check if hit left wall\n                if (this.enemyDirection < 0 && gameSprite.x <= 0) {\n                    enemiesHitWall = true;\n                }\n                // }\n            })\n\n            // change currentEnemyRow\n            this.currentEnemyRow--;\n            if (this.currentEnemyRow < 0) {\n                this.currentEnemyRow = NUM_ENEMY_ROWS - 1;\n            }\n\n            this.moveEnemyCount = 0;\n        }\n\n\n        // Enemy Bombs\n\n        // Find lowest enemies\n        const lowestCols = [];\n        enemies.forEach(gameSprite => {\n            if (gameSprite.isAlive) {\n                const col = gameSprite.metadata.column;\n                lowestCols[col] = gameSprite;\n            }\n        })\n\n        // Fire Enemy bombs randomly\n        if (Math.floor(Math.random() * 40) === 0) {\n            this.fireBomb = true;\n            // Pick random enemy\n            this.firingEnemy = lowestCols[Math.floor(Math.random() * lowestCols.length - 1)]\n        }\n\n        // Random Mystery ship\n        if (Math.floor(Math.random() * 100) === 0) {\n            if (mysteryShips.length === 0) {\n                this.fireMysteryShip = true;\n            }\n\n        }\n\n        const missiles = getLiveItems('missile');\n        // Move missiles\n        missiles.forEach(gameSprite => {\n            gameSprite.y -= MISSILE_SPEED;\n        })\n\n        const bombs = getLiveItems('bomb');\n        // Move missiles\n        bombs.forEach(gameSprite => {\n            gameSprite.y += BOMB_SPEED;\n        })\n\n        // Move mystery ship\n        mysteryShips.forEach(gameSprite => {\n            gameSprite.x += 1;\n        })\n\n        // Game Logic\n        if (enemiesHitWall) {\n            this.enemyDirection *= -1;\n            enemies.forEach(enemy => {\n                enemy.y += ENEMY_SIZE;\n            })\n            enemiesHitWall = false;\n        }\n\n        const isHit = (a, b) => {\n            if (a.x < b.x + b.width && a.x + a.width > b.x) {\n                if (a.y < b.y + b.height && a.y + a.height > b.y) {\n                    return true;\n                }\n            }\n        }\n\n\n        // COLLISION DETECTION\n\n        // Check if missile has hit an invader\n        missiles.forEach(missile => {\n\n            mysteryShips.forEach(mysteryShip => {\n                if (this.numActiveMissiles && isHit(missile, mysteryShip)) {\n                    mysteryShip.isAlive = false;\n                    missile.isAlive = false;\n                    this.numActiveMissiles--;\n                    this.model.score += 1000;\n                }\n\n            })\n\n            enemies.forEach(enemy => {\n                if (this.numActiveMissiles && isHit(missile, enemy)) {\n                    enemy.isAlive = false;\n                    missile.isAlive = false;\n                    this.numActiveMissiles--;\n                    if (enemy.metadata.row > 3) {\n                        this.model.score += 10;\n                    } else if (enemy.metadata.row > 1) {\n                        this.model.score += 20;\n                    } else {\n                        this.model.score += 30;\n                    }\n\n                    // if ((enemies.length - 1) % 5 === 0) {\n                    //     console.log('SPEED UP!!!!!')\n                    //     this.speedUpEnemyMovement();\n                    // }\n\n                    this.enemyStaggerFrequency = this.calculateEnemyStaggerFrequency(enemies.length - 1);\n                }\n            })\n\n            shields.forEach(shield => {\n                if (this.numActiveMissiles && isHit(missile, shield)) {\n                    shield.isAlive = false;\n\n                    //enemy.isAlive = false;\n                    // shield.strength--;\n                    missile.isAlive = false;\n                    this.numActiveMissiles--;\n\n                    // if (shield.strength === 0) {\n\n                    // }\n                }\n            })\n\n            //Check missile has gone above screen\n            if (missile.y < 0) {\n                missile.isAlive = false;\n                this.numActiveMissiles--;\n            }\n        })\n\n        // Check if bombs has hit tank\n        bombs.forEach(bomb => {\n            // TODO - create killBomb function so we dont repeat code\n            if (isHit(bomb, this.tank)) {\n                bomb.isAlive = false;\n                this.numActiveBombs--;\n\n                this.tank.lives--;\n                this.model.lives--;\n                // TODO - Tank Hit!!!\n            }\n\n            shields.forEach(shield => {\n                if (isHit(bomb, shield)) {\n                    bomb.isAlive = false;\n                    shield.isAlive = false;\n                    this.numActiveBombs--\n                }\n            })\n\n            //Check missile has gone below screen\n            if (bomb.y > this.model.gameHeight) {\n                bomb.isAlive = false;\n                this.numActiveBombs--;\n            }\n\n            if (this.numActiveBombs < 0) {\n                this.numActiveBombs = 0;\n            }\n        })\n\n        // Any enemies hit the ground/shields\n        enemies.forEach(enemy => {\n            if (this.hasShields && enemy.y >= ENEMY_SHIELD_LIMIT) {\n                // Remove shields\n                this.removeShields = true;\n\n            }\n            if (enemy.y >= ENEMY_GROUND_LIMIT) {\n                this.gameIsOver = true;\n            }\n        });\n\n        // Any enemies hit the ground/shields\n        mysteryShips.forEach(mysteryShip => {\n            if (mysteryShip.x >= GAME_WIDTH) {\n                mysteryShip.isAlive = false;\n            }\n        });\n\n        this.renderer.render();\n\n\n        // Increase counters\n        this.moveEnemyCount++;\n\n        if (this.model.lives === 0) {\n            this.gameIsOver = true;\n        }\n\n        if (this.gameIsOver) {\n            this.gameOver();\n        }\n\n\n        if (USE_ANIMATION_FRAME) {\n            if (!this.isPaused && this.gameInProgress) {\n                this.animationFrameGameLoop();\n            }\n        } else {\n\n            if (this.isPaused || !this.gameInProgress) {\n                clearInterval(this.interval);\n            }\n        }\n\n        // Clean up dead sprites\n        this.model.removeDeadSprites();\n\n        const soundGap = (this.enemyStaggerFrequency * 0.8);\n        console.log(soundGap);\n        this.frameCount += 1;\n        if(this.frameCount >= Math.max(soundGap, 20)) {\n            //Play sound\n            this.soundManager.playNote();\n            this.frameCount = 0;\n        }\n\n    }\n\n}\n\nwindow.game = new Game();\nwindow.game.init();"]}